import { Lexicons } from './lexicons';
import { LexUserType, LexRefVariant, ValidationResult } from './types';
import { z } from 'zod';
export declare function toLexUri(str: string, baseUri?: string): string;
export declare function validateOneOf(lexicons: Lexicons, path: string, def: LexRefVariant | LexUserType, value: unknown, mustBeObj?: boolean): ValidationResult;
export declare function assertValidOneOf(lexicons: Lexicons, path: string, def: LexRefVariant | LexUserType, value: unknown, mustBeObj?: boolean): unknown;
export declare function toConcreteTypes(lexicons: Lexicons, def: LexRefVariant | LexUserType): LexUserType[];
export declare function requiredPropertiesRefinement<ObjectType extends {
    required?: string[];
    properties?: Record<string, unknown>;
}>(object: ObjectType, ctx: z.RefinementCtx): void;
//# sourceMappingURL=util.d.ts.map