import { AppBskyGraphDefs } from '../client/index';
import { Label, ModerationCause, ModerationOpts, LabelTarget, ModerationBehavior } from './types';
import { ModerationUI } from './ui';
export declare class ModerationDecision {
    did: string;
    isMe: boolean;
    causes: ModerationCause[];
    constructor();
    static merge(...decisions: (ModerationDecision | undefined)[]): ModerationDecision;
    downgrade(): this;
    get blocked(): boolean;
    get muted(): boolean;
    get blockCause(): ModerationCause | undefined;
    get muteCause(): ModerationCause | undefined;
    get labelCauses(): ModerationCause[];
    ui(context: keyof ModerationBehavior): ModerationUI;
    setDid(did: string): void;
    setIsMe(isMe: boolean): void;
    addHidden(hidden: boolean): void;
    addMutedWord(mutedWord: boolean): void;
    addBlocking(blocking: string | undefined): void;
    addBlockingByList(blockingByList: AppBskyGraphDefs.ListViewBasic | undefined): void;
    addBlockedBy(blockedBy: boolean | undefined): void;
    addBlockOther(blockOther: boolean | undefined): void;
    addLabel(target: LabelTarget, label: Label, opts: ModerationOpts): void;
    addMuted(muted: boolean | undefined): void;
    addMutedByList(mutedByList: AppBskyGraphDefs.ListViewBasic | undefined): void;
}
//# sourceMappingURL=decision.d.ts.map